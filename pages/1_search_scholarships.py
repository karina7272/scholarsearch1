# -*- coding: utf-8 -*-
"""1_Search_Scholarships.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n9Kwb49cHjuFsMCv9P_ixxckffONbPtd
"""

import streamlit as st
import pandas as pd
import requests
from bs4 import BeautifulSoup

st.title("üîç Search Scholarships")

keyword = st.text_input("Enter a keyword (e.g., Accounting, Finance, Tennessee):")
search_button = st.button("Search Scholarships")

def scrape_scholarships(keyword):
    url = "https://www.unigo.com/scholarships/accounting-scholarships"
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        st.error(f"Connection error: {e}")
        return pd.DataFrame()

    soup = BeautifulSoup(response.text, "html.parser")

    scholarships = []
    cards = soup.find_all('div', class_='search-results-card')[:20]
    for card in cards:
        title = card.find('h2').text.strip() if card.find('h2') else "No Title"
        link_tag = card.find('a')
        link = f"https://www.unigo.com{link_tag['href']}" if link_tag else "No Link"
        amount = card.find('span', class_='amount')
        deadline = card.find('span', class_='deadline')

        scholarships.append({
            "Scholarship Name": title,
            "Amount": amount.text.strip() if amount else "Unknown",
            "Deadline": deadline.text.strip() if deadline else "Unknown",
            "Link": link
        })

    df = pd.DataFrame(scholarships)

    if keyword:
        df = df[df["Scholarship Name"].str.contains(keyword, case=False, na=False)]

    return df

if search_button:
    if keyword.strip() == "":
        st.warning("Please enter a keyword.")
    else:
        with st.spinner("Searching scholarships..."):
            results = scrape_scholarships(keyword)
            if not results.empty:
                st.success(f"Found {len(results)} scholarships!")

                st.dataframe(results, use_container_width=True)

                csv = results.to_csv(index=False).encode('utf-8')
                st.download_button(
                    label="‚¨áÔ∏è Download CSV",
                    data=csv,
                    file_name="scholarship_results.csv",
                    mime="text/csv"
                )
            else:
                st.warning("No results found. Try another keyword.")